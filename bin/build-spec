#!/bin/bash -e

set -x

RED='\E[1;31m'
YELLOW='\E[1;33m'
GREEN='\E[1;32m'
BLUE='\E[1;34m'
RESET='\E[0m'

##############################################
# show_help                                  #
##############################################
function show_help {
	echo "Please specify the name of a spec package to build."
	echo ""
	echo "Usage: $0 [-r dependancy.rpm] /path/to/specfile [/path/to/specfile] [/path/to/specfile]"
	echo "  -m      Disable dnf fastest mirror plugin"
	echo "  -u      Uninstalls specified dnf package first"
	echo "  -p      Installs specified dnf package next"
	echo "  -r      Installs the specified RPM next"
	echo "  -b      Skip broken packages in RPM install, only applies with -r and/or -p"
	echo "  -o      Set dnf to ignore obsoletes"
	echo "  -n      Use dnf with --nobest option"
	echo ""
	echo "Example: $0 -r RPMS/x86_64/php.rpm -r RPMS/noarch/slack.rpm SPECS/php-memcache.spec"
	echo ""
}

SHORT=p:u:br:honm
LONG=help

# -temporarily store output to be able to check for errors
# -activate advanced mode getopt quoting e.g. via “--options”
# -pass arguments only via   -- "$@"   to separate them correctly
PARSED=$(getopt --options $SHORT --longoptions $LONG --name "$0" -- "$@")
if [[ $? -ne 0 ]]; then
	# e.g. $? == 1
	#  then getopt has complained about wrong arguments to stdout
	exit 2
fi
# use eval with "$PARSED" to properly handle the quoting
eval set -- "$PARSED"

upackages=
packages=
rpmfiles=
skip_broken=
obsoletes=
nomirror=
nobest=

# Enable devtools if variable is set and not empty
if [ -n "$DEVTOOLS" ]; then
	source /opt/rh/devtoolset-8/enable
fi

# now enjoy the options in order and nicely split until we see --
while true; do
	case "$1" in
		-u)
			upackages+="$2 "
			shift 2
			;;
		-p)
			packages+="$2 "
			shift 2
			;;
		-m)
			nomirror="1"
			shift 1
			;;
		-o)
			obsoletes="--setopt=obsoletes=0"
			shift 1
			;;
		-n)
			nobest="--nobest"
			shift 1
			;;
		-r)
			rpmfiles+="$2 "
			shift 2
			;;
		-h|--help)
			show_help
			exit 1
			;;
		-b)
			skip_broken="--skip-broken"
			shift
			;;
		--)
			shift
			break
			;;
		*)
			echo -e "${RED}Programming error${RESET}"
			exit 3
			;;
	esac
done

# handle non-option arguments
if [[ $# -eq 0 ]]; then
	show_help
	exit 1
fi

# dnf cleaning
sudo dnf clean all
sudo rm -rf /var/cache/yum

## Disable dnf mirror if specified
if [ -n "$nomirror" ]; then
	echo -e "${YELLOW}❯ ${GREEN}Disabling dnf Fastest Mirror Plugin ...${RESET}"
	sudo sed -i '/enabled=1/c\enabled=0' /etc/yum/pluginconf.d/fastestmirror.conf
fi

## Uninstall PACKAGES
if [ -n "$upackages" ]; then
	echo -e "${YELLOW}❯ ${GREEN}Uninstalling dnf Packages ...${RESET}"
	sudo dnf -y erase $upackages
fi

## Install PACKAGES
if [ -n "$packages" ]; then
	echo -e "${YELLOW}❯ ${GREEN}Installing dnf Packages ...${RESET}"
	sudo dnf -y $nobest $skip_broken $obsoletes install $packages
fi

## Install RPMS
if [ -n "$rpmfiles" ]; then
	# count files
	DEPCOUNT=$(ls -lq $rpmfiles | wc -l)
	if [ "$DEPCOUNT" -gt 1 ]; then
		echo -e "${YELLOW}❯ ${GREEN}Installing RPMs ...${RESET}"
		sudo dnf -y $nobest $skip_broken $obsoletes localinstall $rpmfiles
	fi
fi

## Build Spec
echo -e "${YELLOW}❯ ${GREEN}Building ${WHITE}$@ ${GREEN}...${RESET}"
cd ~/rpmbuild

for spec in "$@"
do
	sudo yum-builddep -y $nobest $skip_broken ${spec}
	spectool -g -R ${spec}
	rpmbuild --clean -ba ${spec}
done
